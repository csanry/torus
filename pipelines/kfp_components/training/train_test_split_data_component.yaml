name: Train test split
inputs:
- {name: input_file, type: String}
- {name: output_bucket, type: String}
outputs:
- {name: train_set, type: Dataset}
- {name: test_set, type: Dataset}
- {name: train_data, type: String}
- {name: test_data, type: String}
implementation:
  container:
    image: gcr.io/pacific-torus-347809/mle-fp/base:latest
    command:
    - sh
    - -c
    - |2

      if ! [ -x "$(command -v pip)" ]; then
          python3 -m ensurepip || python3 -m ensurepip --user || apt-get install python3-pip
      fi

      PIP_DISABLE_PIP_VERSION_CHECK=1 python3 -m pip install --quiet     --no-warn-script-location 'fsspec' 'gcsfs' 'sklearn' 'kfp==1.8.12' && "$0" "$@"
    - sh
    - -ec
    - |
      program_path=$(mktemp -d)
      printf "%s" "$0" > "$program_path/ephemeral_component.py"
      python3 -m kfp.v2.components.executor_main                         --component_module_path                         "$program_path/ephemeral_component.py"                         "$@"
    - "\nimport kfp\nfrom kfp.v2 import dsl\nfrom kfp.v2.dsl import *\nfrom typing\
      \ import *\n\ndef train_test_split(\n    input_file: str,\n    output_bucket:\
      \ str,\n    train_set: Output[Dataset],\n    test_set: Output[Dataset]\n) ->\
      \ NamedTuple(\"outputs\", [(\"train_data\", str), (\"test_data\", str)]):\n\n\
      \    import pandas as pd\n    from sklearn.model_selection import train_test_split\n\
      \n    df = pd.read_csv(input_file)\n    train, test = train_test_split(df, test_size=0.2,\
      \ random_state=2022)\n\n    train_set.metadata['observations'] = train.shape[0]\n\
      \    train_set.metadata['no._features'] = train.shape[1]\n    train_set.metadata['column_names']\
      \ = list(train.columns)\n    test_set.metadata['observations'] = test.shape[0]\n\
      \    test_set.metadata['no._features'] = train.shape[1]\n    test_set.metadata['column_names']\
      \ = list(test.columns)\n\n    output_train_path = f\"gs://mle-dwh-torus/{output_bucket}/train.csv\"\
      \n    output_test_path = f\"gs://mle-dwh-torus/{output_bucket}/test.csv\" \n\
      \n    train.to_csv(output_train_path, index = False)\n    test.to_csv(output_test_path,\
      \ index = False)\n\n    from collections import namedtuple\n\n    results =\
      \ namedtuple(\"outputs\", [\"train_data\", \"test_data\"])\n\n    return results(output_train_path,\
      \ output_test_path)\n\n"
    args:
    - --executor_input
    - {executorInput: null}
    - --function_to_execute
    - train_test_split
